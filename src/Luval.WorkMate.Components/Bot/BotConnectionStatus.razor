@using Luval.WorkMate.Core.Services


<FluentButton @onclick="OnClickNavigate">
    <FluentIcon Value="@(new Microsoft.FluentUI.AspNetCore.Components.Icons.Regular.Size16.StoreMicrosoft())" />
    @ButtonCaption
</FluentButton>


@code {
    [Inject]
    public required AgentConnectionService Service { get; set; } = default!;

    [Inject]
    public required NavigationManager Navigation { get; set; }

    [Inject]
    public required TodoService TodoService { get; set; }

    public bool HasConnection { get; set; }

    public string ButtonCaption => HasConnection ? "Refresh Connection" : "Create Connection";

    public async Task OnClickNavigate()
    {
        var c = await Service.SetupConnectionAsync((config, user, url) =>
        {
            Navigation.NavigateTo(url);
        }, Navigation.BaseUri);
    }

    override protected async Task OnInitializedAsync()
    {
        HasConnection = await Service.HasConnectionAsync();
        if (HasConnection)
            HasConnection = await TodoService.TestConnectionAsync();

    }

}
