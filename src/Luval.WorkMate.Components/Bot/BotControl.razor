@using Luval.GenAIBotMate.Components
@using Luval.WorkMate.Core.Agent
@using Luval.WorkMate.Core.Resolver
@using Luval.AuthMate.Blazor
@using Microsoft.SemanticKernel.Connectors.OpenAI
@using Microsoft.SemanticKernel;

@rendermode InteractiveServer

<CascadingAuthenticationState>
    <AuthorizeView>
        <NotAuthorized>
            <LoginButtonMate ButtonText=" Google Sign In"
            NavigateTo="/api/auth/login"
            ProviderName="Google"
            IconValue="@(new Microsoft.FluentUI.AspNetCore.Components.Icons.Filled.Size16.LockClosed())" />
        </NotAuthorized>
        <Authorized>
            <BotConnectionStatus></BotConnectionStatus>
            <GenAIBotMateControl @ref="Control"
            ChatTitle="New Chat"
            Service="@Agent"
            PromptSettings="@Settings"
            GenAIChatbotName="@Resolver.BotName">
            </GenAIBotMateControl>
        </Authorized>
    </AuthorizeView>

</CascadingAuthenticationState>

@code {
    private GenAIBotMateControl Control { get; set; }
    [Inject]
    private WorkMateAgent Agent { get; set; }
    [Inject]
    private BotResolver Resolver { get; set; }

    private OpenAIPromptExecutionSettings Settings { get; set; } = new OpenAIPromptExecutionSettings() { 
            Temperature = 0.7,
            FunctionChoiceBehavior = FunctionChoiceBehavior.Auto()
    };

}